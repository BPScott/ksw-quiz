{"version":3,"sources":["serviceWorker.ts","question-banks.ts","components/Header.tsx","components/Answer.tsx","components/Question.tsx","components/QuestionBankPicker.tsx","components/Quiz.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Header","preact_compat_es","createElement","className","this","props","title","meta","React","Component","Answer","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleAnswerSelected","bind","assertThisInitialized","onAnswerSelected","value","statusClass","unguessed","guessedCorrect","guessedIncorrect","status","type","name","onClick","defaultProps","Question","guessedAnswer","undefined","selectAnswer","answer","setState","prevState","_this2","answers","possibleAnswers","map","i","answerStatus","Answer_Answer","key","isActive","Header_Header","query","offset","QuestionBankPicker","keys","questionBanks","reduce","memo","bankName","handleInputChange","handleSubmit","e","defineProperty","target","checked","preventDefault","filteredBanks","onSubmit","_this3","banks","onChange","Quiz","selectedQuestionBanks","selectedQuestions","currentQuestionIndex","score","setQuestionBanks","handleNextQuestion","handleResetSameQuestions","handleResetChangeBanks","_buildAnswerArray","sampleQuestions","formatQuestions","length","q","Question_Question","assign","toString","QuestionBankPicker_QuestionBankPicker","formattedQuestions","bank","currentBank","validAnswersForBank","Array","from","Set","item","a","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","queryTuple","push","err","return","questions","sampleSize","questionsPerQuiz","correctAnswer","validAnswers","filter","answersPerQuestion","splice","random","ReactDOM","render","Quiz_Quiz","Maek Chi Gi: English Pressure Points","Maek Chi Gi: Korean Pressure Points","Maek Chi Gi: Meridians","Maek Cha Gi: English Pressure Points","Maek Cha Gi: Korean Pressure Points","Maek Cha Gi: Meridians","Jee Ahp Sool: English Pressure Points","Jee Ahp Sool: Korean Pressure Points","Jee Ahp Sool: Meridians","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.97e0c508.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as {env: {[key: string]: string}}).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","export default {\n  'Maek Chi Gi: English Pressure Points': [\n    {q: 'English pressure point for Maek Chi Gi 1?', a: 'Broken Sequence'},\n    {\n      q: 'English pressure point for Maek Chi Gi 2?',\n      a: 'Arms Three Measures',\n    },\n    {q: 'English pressure point for Maek Chi Gi 3?', a: 'Heavens Residence'},\n    {q: 'English pressure point for Maek Chi Gi 4?', a: 'Summits Spring'},\n    {q: 'English pressure point for Maek Chi Gi 5?', a: 'Not on a meridian'},\n    {q: 'English pressure point for Maek Chi Gi 6?', a: 'Upper Hinge'},\n    {q: 'English pressure point for Maek Chi Gi 7?', a: 'Not on a meridian'},\n    {q: 'English pressure point for Maek Chi Gi 8?', a: 'Big Wrapping'},\n    {\n      q: 'English pressure point for Maek Chi Gi 9?',\n      a: 'Sea of Ki/Ums Junction',\n    },\n    {q: 'English pressure point for Maek Chi Gi 10?', a: 'Doves Tail'},\n    {q: 'English pressure point for Maek Chi Gi 11?', a: 'Modesty Spring'},\n    {q: 'English pressure point for Maek Chi Gi 12?', a: 'Systems Door'},\n    {q: 'English pressure point for Maek Chi Gi 13?', a: 'Door of Awareness'},\n    {q: 'English pressure point for Maek Chi Gi 14?', a: 'Spirit Yard'},\n    {\n      q: 'English pressure point for Maek Chi Gi 15?',\n      a: 'Breasts Root/Heavens Pool',\n    },\n  ],\n  'Maek Chi Gi: Korean Pressure Points': [\n    {q: 'Korean pressure point for Maek Chi Gi 1?', a: 'Yuhl Guhl'},\n    {q: 'Korean pressure point for Maek Chi Gi 2?', a: 'Soo Sahm Ri'},\n    {q: 'Korean pressure point for Maek Chi Gi 3?', a: 'Chung Boo'},\n    {q: 'Korean pressure point for Maek Chi Gi 4?', a: 'Geuk Chuhn'},\n    {q: 'Korean pressure point for Maek Chi Gi 5?', a: 'Hohn Soo'},\n    {q: 'Korean pressure point for Maek Chi Gi 6?', a: 'Gaek Joo In'},\n    {q: 'Korean pressure point for Maek Chi Gi 7?', a: 'Hohn Soo'},\n    {q: 'Korean pressure point for Maek Chi Gi 8?', a: 'Dae Po'},\n    {q: 'Korean pressure point for Maek Chi Gi 9?', a: 'Ki Hae/Um Kyo'},\n    {q: 'Korean pressure point for Maek Chi Gi 10?', a: 'Goo Mi'},\n    {q: 'Korean pressure point for Maek Chi Gi 11?', a: 'Yuhm Chuhn'},\n    {q: 'Korean pressure point for Maek Chi Gi 12?', a: 'Jahng Moon'},\n    {q: 'Korean pressure point for Maek Chi Gi 13?', a: 'Ah Moon'},\n    {q: 'Korean pressure point for Maek Chi Gi 14?', a: 'Shin Juhng'},\n    {q: 'Korean pressure point for Maek Chi Gi 15?', a: 'Yoo Geun/Choong Ji'},\n  ],\n  'Maek Chi Gi: Meridians': [\n    {q: 'Meridian point for Maek Chi Gi 1?', a: 'Lung 7'},\n    {q: 'Meridian point for Maek Chi Gi 2?', a: 'Large Intestine 10'},\n    {q: 'Meridian point for Maek Chi Gi 3?', a: 'Lung 3'},\n    {q: 'Meridian point for Maek Chi Gi 4?', a: 'Heart 1'},\n    {q: 'Meridian point for Maek Chi Gi 5?', a: 'Not on a meridian'},\n    {q: 'Meridian point for Maek Chi Gi 6?', a: 'Gall Bladder 3'},\n    {q: 'Meridian point for Maek Chi Gi 7?', a: 'Not on a meridian'},\n    {q: 'Meridian point for Maek Chi Gi 8?', a: 'Spleen 21'},\n    {q: 'Meridian point for Maek Chi Gi 9?', a: 'Conception 6/7'},\n    {q: 'Meridian point for Maek Chi Gi 10?', a: 'Conception 15'},\n    {q: 'Meridian point for Maek Chi Gi 11?', a: 'Conception 23'},\n    {q: 'Meridian point for Maek Chi Gi 12?', a: 'Liver 13'},\n    {q: 'Meridian point for Maek Chi Gi 13?', a: 'Governing 15'},\n    {q: 'Meridian point for Maek Chi Gi 14?', a: 'Governing 24'},\n    {q: 'Meridian point for Maek Chi Gi 15?', a: 'Stomach 18/Pericardium 1'},\n  ],\n  'Maek Cha Gi: English Pressure Points': [\n    {q: 'English pressure point for Maek Cha Gi 1?', a: 'Three Um Junction'},\n    {q: 'English pressure point for Maek Cha Gi 2?', a: 'Eyes of the Knee'},\n    {q: 'English pressure point for Maek Cha Gi 3?', a: 'Bend Middle'},\n    {q: 'English pressure point for Maek Cha Gi 4?', a: 'Sea of Blood'},\n    {q: 'English pressure point for Maek Cha Gi 5?', a: 'Systems Door'},\n    {q: 'English pressure point for Maek Cha Gi 6?', a: 'Summits Spring'},\n    {q: 'English pressure point for Maek Cha Gi 7?', a: 'Sea of Ki'},\n    {q: 'English pressure point for Maek Cha Gi 8?', a: 'Doves Tail'},\n    {q: 'English pressure point for Maek Cha Gi 9?', a: 'Modesty Spring'},\n    {q: 'English pressure point for Maek Cha Gi 10?', a: 'Not on a meridian'},\n    {\n      q: 'English pressure point for Maek Cha Gi 11?',\n      a: 'Breasts Root/Heavens Pool',\n    },\n    {q: 'English pressure point for Maek Cha Gi 12?', a: 'Door of Awareness'},\n    {q: 'English pressure point for Maek Cha Gi 13?', a: 'Upper Hinge'},\n    {q: 'English pressure point for Maek Cha Gi 14?', a: 'Big Vertebrae'},\n    {q: 'English pressure point for Maek Cha Gi 15?', a: 'Sunny Hill Spring'},\n  ],\n  'Maek Cha Gi: Korean Pressure Points': [\n    {q: 'Korean pressure point for Maek Cha Gi 1?', a: 'Sahm Um Kyo'},\n    {q: 'Korean pressure point for Maek Cha Gi 2?', a: 'Dohk Bi'},\n    {q: 'Korean pressure point for Maek Cha Gi 3?', a: 'Wee Joong'},\n    {q: 'Korean pressure point for Maek Cha Gi 4?', a: 'Hyul Hae'},\n    {q: 'Korean pressure point for Maek Cha Gi 5?', a: 'Jahng Moon'},\n    {q: 'Korean pressure point for Maek Cha Gi 6?', a: 'Geuk Chuhn'},\n    {q: 'Korean pressure point for Maek Cha Gi 7?', a: 'Ki Hae'},\n    {q: 'Korean pressure point for Maek Cha Gi 8?', a: 'Goo Mi'},\n    {q: 'Korean pressure point for Maek Cha Gi 9?', a: 'Yuhm Chuhn'},\n    {q: 'Korean pressure point for Maek Cha Gi 10?', a: 'Hohn Soo'},\n    {q: 'Korean pressure point for Maek Cha Gi 11?', a: 'Yoo Geun/Choong Ji'},\n    {q: 'Korean pressure point for Maek Cha Gi 12?', a: 'Ah Moon'},\n    {q: 'Korean pressure point for Maek Cha Gi 13?', a: 'Gaek Joo In'},\n    {q: 'Korean pressure point for Maek Cha Gi 14?', a: 'Dae Choo'},\n    {q: 'Korean pressure point for Maek Cha Gi 15?', a: 'Yahng Neung Chuhn'},\n  ],\n  'Maek Cha Gi: Meridians': [\n    {q: 'Meridian point for Maek Cha Gi 1?', a: 'Spleen 6'},\n    {q: 'Meridian point for Maek Cha Gi 2?', a: 'Stomach 35'},\n    {q: 'Meridian point for Maek Cha Gi 3?', a: 'Bladder 54'},\n    {q: 'Meridian point for Maek Cha Gi 4?', a: 'Spleen 10'},\n    {q: 'Meridian point for Maek Cha Gi 5?', a: 'Liver 13'},\n    {q: 'Meridian point for Maek Cha Gi 6?', a: 'Heart 1'},\n    {q: 'Meridian point for Maek Cha Gi 7?', a: 'Conception 8'},\n    {q: 'Meridian point for Maek Cha Gi 8?', a: 'Conception 15'},\n    {q: 'Meridian point for Maek Cha Gi 9?', a: 'Conception 23'},\n    {q: 'Meridian point for Maek Cha Gi 10?', a: 'Not on a meridian'},\n    {q: 'Meridian point for Maek Cha Gi 11?', a: 'Stomach 18/Pericardium 1'},\n    {q: 'Meridian point for Maek Cha Gi 12?', a: 'Governing 15'},\n    {q: 'Meridian point for Maek Cha Gi 13?', a: 'Gall Bladder 3'},\n    {q: 'Meridian point for Maek Cha Gi 14?', a: 'Governing 14'},\n    {q: 'Meridian point for Maek Cha Gi 15?', a: 'Gall Bladder 34'},\n  ],\n  'Jee Ahp Sool: English Pressure Points': [\n    {\n      q: 'English pressure point for Jee Ahp Sool - left hand point?',\n      a: 'Union Valley',\n    },\n    {q: 'English pressure point for Jee Ahp Sool 1?', a: 'Yahngs Creek'},\n    {\n      q: 'English pressure point for Jee Ahp Sool 2?',\n      a: 'Arms Three Measures',\n    },\n    {q: 'English pressure point for Jee Ahp Sool 3?', a: 'Heavens Residence'},\n    {q: 'English pressure point for Jee Ahp Sool 4?', a: 'Empty Basin'},\n    {q: 'English pressure point for Jee Ahp Sool 5?', a: 'Heavens Pillar'},\n    {q: 'English pressure point for Jee Ahp Sool 6?', a: 'Pupil Seam'},\n    {q: 'English pressure point for Jee Ahp Sool 7?', a: 'Mans Center'},\n    {q: 'English pressure point for Jee Ahp Sool 8?', a: 'Summits Spring'},\n    {q: 'English pressure point for Jee Ahp Sool 9?', a: 'Surging Ki'},\n    {q: 'English pressure point for Jee Ahp Sool 10?', a: 'Bend Middle'},\n  ],\n  'Jee Ahp Sool: Korean Pressure Points': [\n    {\n      q: 'Korean pressure point for Jee Ahp Sool - left hand point?',\n      a: 'Hahp Gohk',\n    },\n    {q: 'Korean pressure point for Jee Ahp Sool 1?', a: 'Yahng Gyea'},\n    {q: 'Korean pressure point for Jee Ahp Sool 2?', a: 'Soo Sahm Ri'},\n    {q: 'Korean pressure point for Jee Ahp Sool 3?', a: 'Chung Boo'},\n    {q: 'Korean pressure point for Jee Ahp Sool 4?', a: 'Gyul Bun'},\n    {q: 'Korean pressure point for Jee Ahp Sool 5?', a: 'Chuhn Joo'},\n    {q: 'Korean pressure point for Jee Ahp Sool 6?', a: 'Dohng Jah Ryoh'},\n    {q: 'Korean pressure point for Jee Ahp Sool 7?', a: 'In Joong'},\n    {q: 'Korean pressure point for Jee Ahp Sool 8?', a: 'Geuk Chuhn'},\n    {q: 'Korean pressure point for Jee Ahp Sool 9?', a: 'Ki Choong'},\n    {q: 'Korean pressure point for Jee Ahp Sool 10?', a: 'Wee Joong'},\n  ],\n  'Jee Ahp Sool: Meridians': [\n    {\n      q: 'Meridian point for Jee Ahp Sool - left hand point?',\n      a: 'Large Intestine 4',\n    },\n    {q: 'Meridian point for Jee Ahp Sool 1?', a: 'Large Intestine 5'},\n    {q: 'Meridian point for Jee Ahp Sool 2?', a: 'Large Intestine 10'},\n    {q: 'Meridian point for Jee Ahp Sool 3?', a: 'Lung 3'},\n    {q: 'Meridian point for Jee Ahp Sool 4?', a: 'Stomach 12'},\n    {q: 'Meridian point for Jee Ahp Sool 5?', a: 'Bladder 10'},\n    {q: 'Meridian point for Jee Ahp Sool 6?', a: 'Gall Bladder 1'},\n    {q: 'Meridian point for Jee Ahp Sool 7?', a: 'Governing 26'},\n    {q: 'Meridian point for Jee Ahp Sool 8?', a: 'Heart 1'},\n    {q: 'Meridian point for Jee Ahp Sool 9?', a: 'Stomach 30'},\n    {q: 'Meridian point for Jee Ahp Sool 10?', a: 'Bladder 40/54'},\n  ],\n};\n","import React from 'react';\n\ninterface Props {\n  title: string;\n  meta?: string;\n}\n\nexport default class Header extends React.Component<Props> {\n  render() {\n    return (\n      <h2 className=\"header\">\n        <span>{this.props.title}</span>\n        {this.props.meta && ' '}\n        {this.props.meta && (\n          <span className=\"header__meta\">{this.props.meta}</span>\n        )}\n      </h2>\n    );\n  }\n}\n","import React from 'react';\n\nimport {IAnswerStatus} from '../types';\n\ninterface Props {\n  name: string;\n  value: string;\n  status: IAnswerStatus;\n  onAnswerSelected: (value: string) => void;\n}\n\nexport default class Answer extends React.Component<Props> {\n  static defaultProps = {\n    status: 'unguessed',\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    // Bind events so we can access this inside the event handlers\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n  }\n\n  handleAnswerSelected() {\n    this.props.onAnswerSelected(this.props.value);\n  }\n\n  render() {\n    const statusClass = {\n      unguessed: '',\n      guessedCorrect: ' answer--correct',\n      guessedIncorrect: ' answer--incorrect',\n    }[this.props.status];\n\n    return (\n      <label className={'answer' + statusClass}>\n        <input\n          type=\"radio\"\n          name={this.props.name}\n          value={this.props.value}\n          onClick={this.handleAnswerSelected}\n        />\n        <span className=\"answer__text\">{this.props.value}</span>\n      </label>\n    );\n  }\n}\n","import React from 'react';\n\nimport {IAnswerStatus} from '../types';\n\nimport Answer from './Answer';\nimport Header from './Header';\n\ninterface Props {\n  name: string;\n  query: string;\n  answer: string;\n  possibleAnswers: string[];\n  isActive: boolean;\n  offset?: string;\n}\n\ninterface State {\n  guessedAnswer?: string;\n}\n\nexport default class Question extends React.Component<Props, State> {\n  static defaultProps = {\n    isActive: false,\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    // Initial state\n    this.state = {\n      guessedAnswer: undefined,\n    };\n\n    // Bind events so we can access this inside the event handlers\n    this.selectAnswer = this.selectAnswer.bind(this);\n  }\n\n  selectAnswer(answer: string) {\n    this.setState((prevState) => ({\n      guessedAnswer: answer,\n    }));\n  }\n\n  render() {\n    const answers = this.props.possibleAnswers.map((answer, i) => {\n      let answerStatus: IAnswerStatus = 'unguessed';\n      if (answer === this.state.guessedAnswer) {\n        answerStatus =\n          this.state.guessedAnswer === this.props.answer\n            ? 'guessedCorrect'\n            : 'guessedIncorrect';\n      }\n\n      return (\n        <Answer\n          key={i}\n          name={this.props.name}\n          value={answer}\n          status={answerStatus}\n          onAnswerSelected={this.selectAnswer}\n        />\n      );\n    });\n\n    const className =\n      'question' + (this.props.isActive ? ' question--active' : '');\n\n    return (\n      <div className={className}>\n        <Header title={this.props.query} meta={this.props.offset} />\n        {answers}\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport {IQuestion, IQuestionBanks} from '../types';\n\nimport Header from './Header';\n\ninterface Props {\n  questionBanks: IQuestionBanks;\n  onSubmit: (banks: IQuestionBanks) => void;\n}\n\ninterface State {\n  [key: string]: boolean;\n}\n\nexport default class QuestionBankPicker extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    // Initial state - Everything checked by default\n    this.state = Object.keys(this.props.questionBanks).reduce(\n      (memo, bankName) => {\n        memo[bankName] = true;\n        return memo;\n      },\n      {} as {[key: string]: boolean}\n    );\n\n    // Bind events so we can access this inside the event handlers\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({[e.target.name]: e.target.checked});\n  }\n\n  handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n\n    const filteredBanks = Object.keys(this.props.questionBanks).reduce(\n      (memo, bankName) => {\n        if (this.state[bankName]) {\n          memo[bankName] = this.props.questionBanks[bankName];\n        }\n        return memo;\n      },\n      {} as {[key: string]: IQuestion[]}\n    );\n\n    this.props.onSubmit(filteredBanks);\n  }\n\n  render() {\n    const banks = Object.keys(this.props.questionBanks).map((bankName, i) => {\n      return (\n        <label key={i} className=\"question-bank__item\">\n          <input\n            type=\"checkbox\"\n            name={bankName}\n            checked={this.state[bankName]}\n            onChange={this.handleInputChange}\n          />\n          {bankName}\n        </label>\n      );\n    });\n\n    return (\n      <form onSubmit={this.handleSubmit} className=\"question-bank\">\n        <Header title=\"Choose your question sets:\" />\n        {banks}\n        <button type=\"submit\" className=\"fat-button\">\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport sampleSize from 'lodash/sampleSize';\nimport random from 'lodash/random';\n\nimport {IQuestionBanks, IFormatedQuestion, IQuestionBank} from '../types';\n\nimport Header from './Header';\nimport Question from './Question';\nimport QuestionBankPicker from './QuestionBankPicker';\n\ninterface Props {\n  questionBanks: IQuestionBanks;\n  questionsPerQuiz?: number;\n  answersPerQuestion?: number;\n}\n\ninterface State {\n  selectedQuestionBanks: IQuestionBank[];\n  selectedQuestions: IFormatedQuestion[];\n  currentQuestionIndex: number;\n  score: number;\n}\n\nexport default class Quiz extends React.Component<Props, State> {\n  static defaultProps = {\n    questionsPerQuiz: 10,\n    answersPerQuestion: 4,\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    // Initial state\n    this.state = {\n      selectedQuestionBanks: [],\n      selectedQuestions: [],\n      currentQuestionIndex: 0,\n      score: 0,\n    };\n\n    // Bind events so we can access this inside them\n    this.setQuestionBanks = this.setQuestionBanks.bind(this);\n    this.handleNextQuestion = this.handleNextQuestion.bind(this);\n    this.handleResetSameQuestions = this.handleResetSameQuestions.bind(this);\n    this.handleResetChangeBanks = this.handleResetChangeBanks.bind(this);\n    this._buildAnswerArray = this._buildAnswerArray.bind(this);\n  }\n\n  setQuestionBanks(banks: any) {\n    this.setState((prevState) => ({\n      selectedQuestionBanks: banks,\n      selectedQuestions: this.sampleQuestions(this.formatQuestions(banks)),\n    }));\n  }\n\n  handleNextQuestion() {\n    this.setState((prevState) => ({\n      currentQuestionIndex: prevState.currentQuestionIndex + 1,\n    }));\n  }\n\n  handleResetSameQuestions() {\n    this.setState((prevState) => ({\n      currentQuestionIndex: 0,\n      score: 0,\n    }));\n  }\n\n  handleResetChangeBanks() {\n    this.setState((prevState) => ({\n      selectedQuestionBanks: [],\n      selectedQuestions: [],\n      currentQuestionIndex: 0,\n      score: 0,\n    }));\n  }\n\n  render() {\n    const selectedQuestions = this.state.selectedQuestions;\n    const currentQuestionIndex = this.state.currentQuestionIndex;\n\n    // If there are no selected questions then show the bank picker\n    if (!Object.keys(this.state.selectedQuestionBanks).length) {\n      return (\n        <div className=\"quiz\">\n          <QuestionBankPicker\n            questionBanks={this.props.questionBanks}\n            onSubmit={this.setQuestionBanks}\n          />\n        </div>\n      );\n    }\n\n    // If the index is past the number of questions then  you've reached the end.\n    if (currentQuestionIndex >= selectedQuestions.length) {\n      return (\n        <div className=\"quiz\">\n          <Header title=\"The end\" />\n\n          {/* <div>\n            You scored {this.state.score} / {this.props.questionsPerQuiz}\n          </div> */}\n\n          <button\n            className=\"fat-button\"\n            onClick={this.handleResetSameQuestions}\n          >\n            Ask the same questions again\n          </button>\n          <button className=\"fat-button\" onClick={this.handleResetChangeBanks}>\n            Pick a new set of questions\n          </button>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"quiz\">\n        {selectedQuestions.map((q, i) => (\n          <Question\n            key={i}\n            name={'question' + (i + 1)}\n            isActive={i === currentQuestionIndex}\n            offset={(i + 1).toString() + ' / ' + selectedQuestions.length}\n            {...q}\n          />\n        ))}\n        <button className=\"next-button\" onClick={this.handleNextQuestion}>\n          Next Question\n        </button>\n      </div>\n    );\n  }\n\n  /**\n    Initial question banks look like:\n    {\n      'First Bank Name': [\n        {'First Question?' : 'First Answer'},\n        {'Second Question?' : 'Second Answer'},\n      ],\n      'Second Bank Name': [\n        {'Third Question?' : 'Third Answer'},\n        {'Fourth Question?' : 'Fourth Answer'},\n      ]\n    }\n\n    We need to reformat that into an array of questions, each containing a\n    single answer\n\n    [\n      {query: 'FirstQuestion', answer: 'FirstAnswer', possibleAnswers: ['FirstAnswer', 'SecondAnswer']}\n    ]\n  */\n  formatQuestions(questionBanks: IQuestionBanks) {\n    let formattedQuestions: IFormatedQuestion[] = [];\n\n    // Reworks how a\n    for (let bank in questionBanks) {\n      const currentBank = questionBanks[bank];\n\n      const validAnswersForBank = Array.from(\n        new Set(currentBank.map((item) => item.a))\n      );\n\n      for (const queryTuple of currentBank) {\n        formattedQuestions.push({\n          query: queryTuple.q,\n          answer: queryTuple.a,\n          possibleAnswers: this._buildAnswerArray(\n            queryTuple.a,\n            validAnswersForBank\n          ),\n        });\n      }\n    }\n\n    return formattedQuestions;\n  }\n\n  sampleQuestions(questions: IFormatedQuestion[]) {\n    return sampleSize(questions, this.props.questionsPerQuiz);\n  }\n\n  _buildAnswerArray(correctAnswer: string, validAnswers: string[]) {\n    // Grab 3 random wrong answers for this question\n    let possibleAnswers = sampleSize(\n      validAnswers.filter((a) => a !== correctAnswer),\n      this.props.answersPerQuestion! - 1\n    );\n\n    // Insert the right answer at a random point in the array\n    possibleAnswers.splice(\n      random(0, possibleAnswers.length - 1),\n      0,\n      correctAnswer\n    );\n\n    return possibleAnswers;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport questionBanks from './question-banks';\n\nimport Quiz from './components/Quiz';\nimport './index.css';\n\nReactDOM.render(\n  <Quiz questionBanks={questionBanks} />,\n  document.getElementById('root')\n);\nserviceWorker.register();\n"],"sourceRoot":""}